(simple:import '(:simplisp-test.utils
                 :simplisp-test.tests))

(minitest (last1 '(1 2 3 4 5)) 5)
(minitest (single '(1)) 1)
(minitest (filter #'(lambda (x) (if (oddp x) x)) '(1 2 3 4 5)) '(1 3 5))
(minitest (string-split "," "abc,def,ghi,jkl") '("abc" "def" "ghi" "jkl"))
(minitest (string-split #\, "abc,def,ghi,jkl") '("abc" "def" "ghi" "jkl"))
(minitest (string-join "," '("abc" "def" "ghi" "jkl")) "abc,def,ghi,jkl")
(minitest (string-join #\, '("abc" "def" "ghi" "jkl")) "abc,def,ghi,jkl")
(minitest (string+ "abc" "def" "efg") "abcdefefg")
(minitest (namestring+ #P"/home/user/" "test" "." "lisp") "/home/user/test.lisp")
(minitest (directory-pathname-p "~/test.lisp") nil)
(minitest (directory-pathname-p "~/") "~/")
(minitest (pathname-as-directory "/bin") #P"/bin/")
(minitest (pathname-exist-p "/bin") #P"/bin/")
(minitest (directory-exist-p "/bin") #P"/bin/")
(minitest (directory-exist-p "/bin/bash") nil)
(minitest (file-exist-p "/bin/bash") #P"/bin/bash")
(minitest (file-exist-p "/bin") nil)
(minitest (dirname "/bin/bash") #P"/bin/")
(minitest (dirname "/bin/") #P"/")
(minitest (dirname "/") #P"/")
(minitest (basename "/bin") "bin")
(minitest (basename "/bin/bash") "bash")

